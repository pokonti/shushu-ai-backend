version: "3.8"
services:
  db:
    image: postgres:15
    restart: always
    container_name: shushu-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: shushu-redis
    ports:
      - "6379:6379"

  backend:
    build: .
    container_name: shushu-ai-app
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
#    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000

  worker:
    build: .
    container_name: shushu-celery-worker
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - .env
    command: >
      celery -A src.worker.celery_app worker --loglevel=info --concurrency=2

volumes:
  postgres_data:


#version: "3.8"
#services:
#  db:
#    image: postgres:15
#    restart: always
#    container_name: shushu-postgres
#    environment:
#      POSTGRES_DB: mydb
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#
#  redis:
#    image: redis:7-alpine
#    container_name: shushu-redis
#    ports:
#      - "6379:6379"
#
#  backend:
#    build: .
#    container_name: shushu-ai-app
#    restart: always
#    depends_on:
#      - db
#      - redis
#    env_file:
#      - .env
#    ports:
#      - "8000:8000"
#    command: uvicorn src.main:app --host 0.0.0.0 --port 8000
#
#  worker:
#    build: .
#    container_name: shushu-celery-worker
#    restart: always
#    depends_on:
#      - redis
#      - db
#    env_file:
#      - .env
#    command: >
#      celery -A src.worker.celery_app worker --loglevel=info
#
#
#volumes:
#  postgres_data:
